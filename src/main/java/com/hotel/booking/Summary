The project is centered around facilitating service bookings for customers,
allowing them to book any hotel from a registered list and cancel reservations as needed.
It includes record-keeping functionality to track customers who have made hotel bookings and
those who have canceled reservations for various reasons. I implemented the project using Java 8 and
the Spring Boot framework. Additionally, I incorporated validation constraints when users add entries to
the table and implemented exception handling for scenarios where the user is not found.
The project features seven endpoints, each serving a specific purpose.
GetMapping resources:

http://localhost:8085/user/all
It will returns list of users in table.
response:
[s
    {
        "userID": 101,
        "userName": "ritik",
        "emailId": "ritiksachd@gmail.com",
        "phone": "1234658708",
        "password": "abs@123"
    },
    {
        "userID": 102,
        "userName": "titik",
        "emailId": "titiksachd@gmail.com",
        "phone": "4565555505",
        "password": "acf@123"
    },
    {
        "userID": 103,
        "userName": "priya",
        "emailId": "priyasachd@gmail.com",
        "phone": "1234789978",
        "password": "abg@123"
    }
]

http://localhost:8085/hotel/all
It will returns list of hotel in table.
response:
[
    {
        "hotelID": 101,
        "hotelCity": "Gurgram",
        "hotelAddress": "Islampur_Village",
        "hotelName": "Ashoka",
        "rating": 3.4,
        "review": "Good"
    },
    {
        "hotelID": 102,
        "hotelCity": "Gurgram",
        "hotelAddress": "Sector_45",
        "hotelName": "Taj",
        "rating": 4.6,
        "review": "Nice"
    },
    {
        "hotelID": 103,
        "hotelCity": "Gurgram",
        "hotelAddress": "Sector_78",
        "hotelName": "Blue_Palace",
        "rating": 4.2,
        "review": "Better"
    },
    {
        "hotelID": 104,
        "hotelCity": "Gurgram",
        "hotelAddress": "Sector34",
        "hotelName": "Monga",
        "rating": 4.4,
        "review": "Good"
    }
]
http://localhost:8085/booking/all
It will returns list of booking in table.
[
    {
        "bookingID": 901,
        "hotelID": 101,
        "userID": 101,
        "checkIn": "2024-12-03",
        "checkOut": "2024-12-03",
        "roomtype": "Double",
        "noOfGuest": "four",
        "status": "Confirmed"
    },
    {
        "bookingID": 902,
        "hotelID": 102,
        "userID": 101,
        "checkIn": "2024-12-03",
        "checkOut": "2024-12-03",
        "roomtype": "Triple",
        "noOfGuest": "three",
        "status": "Confirmed"
    },
    {
        "bookingID": 903,
        "hotelID": 103,
        "userID": 103,
        "checkIn": "2024-12-03",
        "checkOut": "2024-12-03",
        "roomtype": "Single",
        "noOfGuest": "two",
        "status": "Confirmed"
    }
]

PostMapping resources:
http://localhost:8085/user/add
request:
JSON object for adding in user_info table.
{
    "userName": "Santosh",
    "emailId": "santosh@gmail.com",
    "phone": "1234658708",
    "password": "san@123"
}

response:
{
    "userID": null, // id is autogenerated
    "userName": "Santosh",
    "emailId": "santosh@gmail.com",
    "phone": "1234658708",
    "password": "san@123"
}
http://localhost:8085/hotel/add
request;
JSON object for adding in hotel table
{
    "hotelCity": "Gurgram",
    "hotelAddress": "varanasi",
    "hotelName": "AnujHotel",
    "rating": 4.4,
    "review": "Nice"
}
response:
{
    "hotelID": null,// id is autogenerated
    "hotelCity": "Gurgram",
    "hotelAddress": "varanasi",
    "hotelName": "AnujHotel",
    "rating": 4.4,
    "review": "Nice"
}

http://localhost:8085/booking/{id}/allbooking
http://localhost:8085/booking/2/allbooking
id:hotel id in which we want to book the hotel
request:
JSON for hotel booking
{
        "userID": 101,
        "checkIn": "2024-11-03",
        "checkOut": "2024-11-03",
        "roomtype": "Single",
        "noOfGuest": "four"
}
response:
{
    "bookingID": 1,
    "hotelID": 2,
    "userID": 101,
    "checkIn": "2024-11-03",
    "checkOut": "2024-11-03",
    "roomtype": "Single",
    "noOfGuest": "four",
    "status": null
}
http://localhost:8085/booking/{uid}/cancelbooking/{bId}
http://localhost:8085/booking/{101}/cancelbooking/{1}
uid: user ID
bId: booking id we want to cancel for particular user.
response: ok http_code:200



Hit below url to check the Tables details.
H2 url:http://localhost:8085/h2-console






